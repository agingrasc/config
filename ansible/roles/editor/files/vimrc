call plug#begin('~/.vim/pluged')

"async exec
Plug 'Shougo/vimproc.vim', {'do': 'make'}

"Ansible/Yaml
Plug 'chase/vim-ansible-yaml'

"ALE
Plug 'w0rp/ale'

"Better completion
Plug 'maralla/completor.vim'

"Darcula theme
Plug 'blueshirts/darcula'

"Debugger
Plug 'idanarye/vim-vebugger'

"Dispatch
Plug 'tpope/vim-dispatch'

"easy align
Plug 'junegunn/vim-easy-align'

"Fugitive
Plug 'tpope/vim-fugitive'

"Fuzzy finder
Plug 'junegunn/fzf.vim'

"Gitgutter
Plug 'airblade/vim-gitgutter'

"Green
Plug 'janko/vim-test'

"Jinja
Plug 'lepture/vim-jinja'

"Sudo Edit
Plug 'chrisbra/SudoEdit.vim'

"ripgrep
Plug 'jremmen/vim-ripgrep'

"rust
Plug 'rust-lang/rust.vim'

"Toml
Plug 'cespare/vim-toml'

"tcomment
Plug 'tomtom/tcomment_vim'

"snippet
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

"Venv
Plug 'plytophogy/vim-virtualenv'

"Good color scheme
Plug 'jnurmine/Zenburn'

"Better status line
Plug 'vim-airline/vim-airline'
call plug#end()

syntax on
filetype plugin indent on

"general settings
set number
set nocompatible
set hidden
set showcmd
set wildmenu
set backspace=eol,start,indent
set laststatus=2

"get rid of backup file
set nobackup
set nowb
set noswapfile

"indentation management
set expandtab
set smarttab
set autoindent
set smartindent
set shiftwidth=2
set tabstop=2

"search options
set ignorecase
set smartcase
set hlsearch
set showmatch

"make utf8 and unix the default
set encoding=utf8
set ffs=unix,dos,mac

"mapping
let mapleader = ","
noremap <leader>ev :e $MYVIMRC<cr>
noremap <leader>rv :source $MYVIMRC<cr>
nnoremap <leader><leader>s :%s/\s+$//ge \| noh <cr>

"autocommand
augroup vimrc
    au!
    "get rid of trailfing white space on write
    au BufWritePre * :%s/\s*$//e | noh | exec 'normal ``zz'
    au BufRead *.yml :setf ansible
augroup end

"theme
set background=dark
colorscheme darcula

"airline
let g:airline_powerline_fonts = 1

"ALE
nnoremap <c-j> :ALENext<cr>
nnoremap <c-k> :ALEPrevious<cr>
let g:ale_linters = {'rust': ['rls']}

"easy align
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

"Completor
let g:completor_python_binary = '/usr/bin/python3'

"Fzf
nnoremap <C-e> :History<cr>
nnoremap <C-p> :Files<cr>

"Ultisnip
let g:UltiSnipExpandTrigger="<tab>"

"Python
au FileType python setlocal shiftwidth=2 softtabstop=2 expandtab

" TComment
noremap <c-m> :TComment<cr>
noremap <c-_> :TComment<cr>

" Vebugger
noremap <S-F9> :VBGstartPDB<cr>
noremap <S-F8> :VBGtoggleBreakpointThisLine<cr>
